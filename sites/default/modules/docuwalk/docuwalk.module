<?php
// $Id$

function docuwalk_init() {
  drupal_add_css(drupal_get_path('module', 'docuwalk') . '/docuwalk.css');
}

/**
 * Implementation of hook_autoload_info().
 */
function docuwalk_autoload_info() {
  return array(
    'DocuWalkTaskResource' => array(
      'file' => 'includes/DocuWalkTaskResource.php',
    ),
    'DocuWalkSolutionResource' => array(
      'file' => 'includes/DocuWalkSolutionResource.php',
    ),
    'DocuWalkTextResource' => array(
      'file' => 'includes/DocuWalkTextResource.php',
    ),
    'DocuWalkPictureResource' => array(
      'file' => 'includes/DocuWalkPictureResource.php',
    ),
  );
}

/**
 * Implementation of hook_service_resource().
 */
function docuwalk_service_resource() {
  // $res = array(
  //   'docuwalk-task' => ServicesOop::definitionFromClass('DocuWalkTaskResource'),
  //   'docuwalk-solution' => ServicesOop::definitionFromClass('DocuWalkSolutionResource'),
  //   'docuwalk-text' => ServicesOop::definitionFromClass('DocuWalkTextResource'),
  //   'docuwalk-picture' => ServicesOop::definitionFromClass('DocuWalkPictureResource'),
  // );
  return array(
    'docuwalk-task' => array(
      '#retrieve' => array(
        '#access callback' => 'DocuWalkTaskResource::access',
        '#access arguments' => array(
          0 => 'view',
        ),
        '#access arguments append' => true,
        '#args' => array(
          0 => array(
            '#name' => 'nid',
            '#type' => 'int',
            '#description' => 'The nid of the task to get',
            '#source' => array(
              'path' => '0',
            ),
            '#optional' => false,
          ),
        ),
        '#help' => 'Retrieves a task',
        '#callback' => 'DocuWalkTaskResource::retrieve',
      ),
      '#create' => array(
        '#access callback' => 'DocuWalkTaskResource::access',
        '#access arguments' => array(
          0 => 'create',
        ),
        '#access arguments append' => false,
        '#args' => array(
          0 => array(
            '#name' => 'task',
            '#type' => 'struct',
            '#description' => '',
            '#source' => 'data',
            '#optional' => false,
          ),
        ),
        '#help' => 'Creates a task',
        '#callback' => 'DocuWalkTaskResource::create',
      ),
      '#update' => array(
        '#access callback' => 'DocuWalkTaskResource::access',
        '#access arguments' => array(
          0 => 'update',
        ),
        '#access arguments append' => true,
        '#args' => array(
          0 => array(
            '#name' => 'nid',
            '#type' => 'int',
            '#description' => 'The nid of the task to update',
            '#source' => array(
              'path' => '0',
            ),
            '#optional' => false,
          ),
          1 => array(
            '#name' => 'task',
            '#type' => 'struct',
            '#description' => 'The task object',
            '#source' => 'data',
            '#optional' => false,
          ),
        ),
        '#help' => 'Updates a task',
        '#callback' => 'DocuWalkTaskResource::update',
      ),
      '#delete' => array(
        '#access callback' => 'DocuWalkTaskResource::access',
        '#access arguments' => array(
          0 => 'delete',
        ),
        '#access arguments append' => true,
        '#args' => array(
          0 => array(
            '#name' => 'nid',
            '#type' => 'int',
            '#description' => 'The nid of the task to delete',
            '#source' => array(
              'path' => '0',
            ),
            '#optional' => false,
          ),
        ),
        '#help' => 'Deletes a task',
        '#callback' => 'DocuWalkTaskResource::delete',
      ),
      '#index' => array(
        '#access callback' => 'user_access',
        '#access arguments' => array(
          0 => 'access content',
        ),
        '#access arguments append' => false,
        '#args' => array(
          0 => array(
            '#name' => 'page',
            '#type' => 'int',
            '#description' => '',
            '#source' => array(
              'param' => 'page',
            ),
            '#optional' => true,
            '#default value' => 0,
          ),
          1 => array(
            '#name' => 'fields',
            '#type' => 'string',
            '#description' => '',
            '#source' => array(
              'param' => 'fields',
            ),
            '#optional' => true,
            '#default value' => array(),
          ),
          2 => array(
            '#name' => 'parameters',
            '#type' => 'array',
            '#description' => '',
            '#source' => 'param',
            '#optional' => true,
            '#default value' => array(),
          ),
        ),
        '#help' => 'Retrieves a listing of tasks',
        '#callback' => 'DocuWalkTaskResource::index',
      ),
    ),
    'docuwalk-solution' => array(
      '#targeted actions' => array(
        'add-waypoint' => array(
          '#access callback' => 'DocuWalkSolutionResource::access',
          '#access arguments' => array(
            0 => 'update',
          ),
          '#access arguments append' => true,
          '#args' => array(
            0 => array(
              '#name' => 'nid',
              '#type' => 'int',
              '#description' => 'The nid of the solution to add the waypoint to',
              '#source' => array(
                'path' => '0',
              ),
              '#optional' => false,
            ),
            1 => array(
              '#name' => 'waypoint',
              '#type' => 'struct',
              '#description' => 'The waypoint to add',
              '#source' => 'data',
              '#optional' => false,
            ),
          ),
          '#help' => 'Controller method for writing waypoints to a solution',
          '#callback' => 'DocuWalkSolutionResource::addWaypoint',
        ),
      ),
      '#retrieve' => array(
        '#access callback' => 'DocuWalkSolutionResource::access',
        '#access arguments' => array(
          0 => 'view',
        ),
        '#access arguments append' => true,
        '#args' => array(
          0 => array(
            '#name' => 'nid',
            '#type' => 'int',
            '#description' => 'The nid of the solution to get',
            '#source' => array(
              'path' => '0',
            ),
            '#optional' => false,
          ),
        ),
        '#help' => 'Retrieves a solution',
        '#callback' => 'DocuWalkSolutionResource::retrieve',
      ),
      '#create' => array(
        '#access callback' => 'DocuWalkSolutionResource::access',
        '#access arguments' => array(
          0 => 'create',
        ),
        '#access arguments append' => false,
        '#args' => array(
          0 => array(
            '#name' => 'solution',
            '#type' => 'struct',
            '#description' => '',
            '#source' => 'data',
            '#optional' => false,
          ),
        ),
        '#help' => 'Creates a solution',
        '#callback' => 'DocuWalkSolutionResource::create',
      ),
      '#update' => array(
        '#access callback' => 'DocuWalkSolutionResource::access',
        '#access arguments' => array(
          0 => 'update',
        ),
        '#access arguments append' => true,
        '#args' => array(
          0 => array(
            '#name' => 'nid',
            '#type' => 'int',
            '#description' => 'The nid of the solution to update',
            '#source' => array(
              'path' => '0',
            ),
            '#optional' => false,
          ),
          1 => array(
            '#name' => 'solution',
            '#type' => 'struct',
            '#description' => 'The solution object',
            '#source' => 'data',
            '#optional' => false,
          ),
        ),
        '#help' => 'Updates a solution',
        '#callback' => 'DocuWalkSolutionResource::update',
      ),
      '#delete' => array(
        '#access callback' => 'DocuWalkSolutionResource::access',
        '#access arguments' => array(
          0 => 'delete',
        ),
        '#access arguments append' => true,
        '#args' => array(
          0 => array(
            '#name' => 'nid',
            '#type' => 'int',
            '#description' => 'The nid of the solution to delete',
            '#source' => array(
              'path' => '0',
            ),
            '#optional' => false,
          ),
        ),
        '#help' => 'Deletes a solution',
        '#callback' => 'DocuWalkSolutionResource::delete',
      ),
      '#index' => array(
        '#access callback' => 'user_access',
        '#access arguments' => array(
          0 => 'access content',
        ),
        '#access arguments append' => false,
        '#args' => array(
          0 => array(
            '#name' => 'page',
            '#type' => 'int',
            '#description' => '',
            '#source' => array(
              'param' => 'page',
            ),
            '#optional' => true,
            '#default value' => 0,
          ),
          1 => array(
            '#name' => 'fields',
            '#type' => 'string',
            '#description' => '',
            '#source' => array(
              'param' => 'fields',
            ),
            '#optional' => true,
            '#default value' => array(),
          ),
          2 => array(
            '#name' => 'parameters',
            '#type' => 'array',
            '#description' => '',
            '#source' => 'param',
            '#optional' => true,
            '#default value' => array(),
          ),
        ),
        '#help' => 'Retrieves a listing of solutions',
        '#callback' => 'DocuWalkSolutionResource::index',
      ),
    ),
    'docuwalk-text' => array(
      '#retrieve' => array(
        '#access callback' => 'DocuWalkTextResource::access',
        '#access arguments' => array(
          0 => 'view',
        ),
        '#access arguments append' => true,
        '#args' => array(
          0 => array(
            '#name' => 'nid',
            '#type' => 'int',
            '#description' => 'The nid of the text to get',
            '#source' => array(
              'path' => '0',
            ),
            '#optional' => false,
          ),
        ),
        '#help' => 'Retrieves a text',
        '#callback' => 'DocuWalkTextResource::retrieve',
      ),
      '#create' => array(
        '#access callback' => 'DocuWalkTextResource::access',
        '#access arguments' => array(
          0 => 'create',
        ),
        '#access arguments append' => false,
        '#args' => array(
          0 => array(
            '#name' => 'text',
            '#type' => 'struct',
            '#description' => '',
            '#source' => 'data',
            '#optional' => false,
          ),
        ),
        '#help' => 'Creates a text',
        '#callback' => 'DocuWalkTextResource::create',
      ),
      '#update' => array(
        '#access callback' => 'DocuWalkTextResource::access',
        '#access arguments' => array(
          0 => 'update',
        ),
        '#access arguments append' => true,
        '#args' => array(
          0 => array(
            '#name' => 'nid',
            '#type' => 'int',
            '#description' => 'The nid of the text to update',
            '#source' => array(
              'path' => '0',
            ),
            '#optional' => false,
          ),
          1 => array(
            '#name' => 'text',
            '#type' => 'struct',
            '#description' => 'The text object',
            '#source' => 'data',
            '#optional' => false,
          ),
        ),
        '#help' => 'Updates a text',
        '#callback' => 'DocuWalkTextResource::update',
      ),
      '#delete' => array(
        '#access callback' => 'DocuWalkTextResource::access',
        '#access arguments' => array(
          0 => 'delete',
        ),
        '#access arguments append' => true,
        '#args' => array(
          0 => array(
            '#name' => 'nid',
            '#type' => 'int',
            '#description' => 'The nid of the text to delete',
            '#source' => array(
              'path' => '0',
            ),
            '#optional' => false,
          ),
        ),
        '#help' => 'Deletes a text',
        '#callback' => 'DocuWalkTextResource::delete',
      ),
      '#index' => array(
        '#access callback' => 'user_access',
        '#access arguments' => array(
          0 => 'access content',
        ),
        '#access arguments append' => false,
        '#args' => array(
          0 => array(
            '#name' => 'page',
            '#type' => 'int',
            '#description' => '',
            '#source' => array(
              'param' => 'page',
            ),
            '#optional' => true,
            '#default value' => 0,
          ),
          1 => array(
            '#name' => 'fields',
            '#type' => 'string',
            '#description' => '',
            '#source' => array(
              'param' => 'fields',
            ),
            '#optional' => true,
            '#default value' => array(),
          ),
          2 => array(
            '#name' => 'parameters',
            '#type' => 'array',
            '#description' => '',
            '#source' => 'param',
            '#optional' => true,
            '#default value' => array(),
          ),
        ),
        '#help' => 'Retrieves a listing of texts',
        '#callback' => 'DocuWalkTextResource::index',
      ),
    ),
    'docuwalk-picture' => array(
      '#targeted actions' => array(
        'file' => array(
          '#access callback' => 'DocuWalkPictureResource::access',
          '#access arguments' => array(
            0 => 'update',
          ),
          '#access arguments append' => true,
          '#rest request parsers' => array(
            'image/*' => 'RESTServer::fileRecieve',
          ),
          '#args' => array(
            0 => array(
              '#name' => 'nid',
              '#type' => 'int',
              '#description' => 'The nid of the image to update',
              '#source' => array(
                'path' => '0',
              ),
              '#optional' => false,
            ),
            1 => array(
              '#name' => 'file',
              '#type' => 'struct',
              '#description' => 'The file object',
              '#source' => 'data',
              '#optional' => false,
            ),
          ),
          '#help' => 'Attaches a file to the image node',
          '#callback' => 'DocuWalkPictureResource::uploadFile',
        ),
      ),
      '#retrieve' => array(
        '#access callback' => 'DocuWalkPictureResource::access',
        '#access arguments' => array(
          0 => 'view',
        ),
        '#access arguments append' => true,
        '#args' => array(
          0 => array(
            '#name' => 'nid',
            '#type' => 'int',
            '#description' => 'The nid of the picture to get',
            '#source' => array(
              'path' => '0',
            ),
            '#optional' => false,
          ),
        ),
        '#help' => 'Retrieves a picture',
        '#callback' => 'DocuWalkPictureResource::retrieve',
      ),
      '#create' => array(
        '#access callback' => 'DocuWalkPictureResource::access',
        '#access arguments' => array(
          0 => 'create',
        ),
        '#access arguments append' => false,
        '#args' => array(
          0 => array(
            '#name' => 'picture',
            '#type' => 'struct',
            '#description' => '',
            '#source' => 'data',
            '#optional' => false,
          ),
        ),
        '#help' => 'Creates a picture',
        '#callback' => 'DocuWalkPictureResource::create',
      ),
      '#update' => array(
        '#access callback' => 'DocuWalkPictureResource::access',
        '#access arguments' => array(
          0 => 'update',
        ),
        '#access arguments append' => true,
        '#args' => array(
          0 => array(
            '#name' => 'nid',
            '#type' => 'int',
            '#description' => 'The nid of the picture to update',
            '#source' => array(
              'path' => '0',
            ),
            '#optional' => false,
          ),
          1 => array(
            '#name' => 'picture',
            '#type' => 'struct',
            '#description' => 'The picture object',
            '#source' => 'data',
            '#optional' => false,
          ),
        ),
        '#help' => 'Updates a picture',
        '#callback' => 'DocuWalkPictureResource::update',
      ),
      '#delete' => array(
        '#access callback' => 'DocuWalkPictureResource::access',
        '#access arguments' => array(
          0 => 'delete',
        ),
        '#access arguments append' => true,
        '#args' => array(
          0 => array(
            '#name' => 'nid',
            '#type' => 'int',
            '#description' => 'The nid of the picture to delete',
            '#source' => array(
              'path' => '0',
            ),
            '#optional' => false,
          ),
        ),
        '#help' => 'Deletes a picture',
        '#callback' => 'DocuWalkPictureResource::delete',
      ),
      '#index' => array(
        '#access callback' => 'user_access',
        '#access arguments' => array(
          0 => 'access content',
        ),
        '#access arguments append' => false,
        '#args' => array(
          0 => array(
            '#name' => 'page',
            '#type' => 'int',
            '#description' => '',
            '#source' => array(
              'param' => 'page',
            ),
            '#optional' => true,
            '#default value' => 0,
          ),
          1 => array(
            '#name' => 'fields',
            '#type' => 'string',
            '#description' => '',
            '#source' => array(
              'param' => 'fields',
            ),
            '#optional' => true,
            '#default value' => array(),
          ),
          2 => array(
            '#name' => 'parameters',
            '#type' => 'array',
            '#description' => '',
            '#source' => 'param',
            '#optional' => true,
            '#default value' => array(),
          ),
        ),
        '#help' => 'Retrieves a listing of picturess',
        '#callback' => 'DocuWalkPictureResource::index',
      ),
    ),
  );
}  

/**
 * Implementation of hook_oauth_default_contexts().
 */
function docuwalk_oauth_default_contexts() {
  return array(
    'docuwalk' => array(
      '*' => array(
        'title' => 'Login !appname',
        'description' => 'This will allow !appname to connect to !sitename',
        'weight' => -1,
      ),
    ),
  );
}

/**
 * Implementation of hook_services_contexts().
 */
function docuwalk_services_contexts() {
  return array(
    'docuwalk' => array(
      'title' => 'DocuWalk API',
      'server' => 'rest_server',
      'path' => 'api',
      'authentication' => 'services_oauth',
      'authentication_settings' => array(
        'oauth_context' => 'docuwalk',
      ),
      'resources' => array(
        'docuwalk-task' => array(
          'operations' => array(
            'create' => array(
              'enabled' => TRUE,
            ),
            'retrieve' => array(
              'enabled' => TRUE,
            ),
            'update' => array(
              'enabled' => TRUE,
            ),
            'delete' => array(
              'enabled' => TRUE,
            ),
            'index' => array(
              'enabled' => TRUE,
            ),
          ),
        ),
        'docuwalk-solution' => array(
          'operations' => array(
            'create' => array(
              'enabled' => TRUE,
            ),
            'retrieve' => array(
              'enabled' => TRUE,
            ),
            'update' => array(
              'enabled' => TRUE,
            ),
            'delete' => array(
              'enabled' => TRUE,
            ),
            'index' => array(
              'enabled' => TRUE,
            ),
          ),
          'targeted actions' => array(
            'add-waypoint' => array(
              'enabled' => TRUE,
            ),
          ),
        ),
        'docuwalk-text' => array(
          'operations' => array(
            'create' => array(
              'enabled' => TRUE,
            ),
            'retrieve' => array(
              'enabled' => TRUE,
            ),
            'update' => array(
              'enabled' => TRUE,
            ),
            'delete' => array(
              'enabled' => TRUE,
            ),
            'index' => array(
              'enabled' => TRUE,
            ),
          ),
        ),
      ),
    ),
  );
}